"""empty message

Revision ID: 722b6fa5ec88
Revises: 172905031acc
Create Date: 2025-06-16 17:59:12.975300

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '722b6fa5ec88'
down_revision: Union[str, None] = '172905031acc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if constraint already exists before creating it
    connection = op.get_bind()
    result = connection.execute(
        sa.text("SELECT 1 FROM information_schema.table_constraints "
                "WHERE constraint_name = 'uq_lightrag_doc_status_workspace_id' "
                "AND table_name = 'lightrag_doc_status'")
    ).fetchone()
    
    if not result:
        op.create_unique_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', ['workspace', 'id'])
    
    # Add name column as nullable first, then copy data and make it non-nullable
    op.add_column('model_service_provider', sa.Column('name', sa.String(length=256), nullable=True))
    
    # Copy data from provider_name to name
    connection.execute(sa.text("UPDATE model_service_provider SET name = provider_name"))
    
    # Make name column non-nullable
    op.alter_column('model_service_provider', 'name', nullable=False)
    
    # Drop old constraints and indexes
    op.drop_index(op.f('ix_model_service_provider_provider_name'), table_name='model_service_provider')
    op.drop_constraint(op.f('uq_model_service_provider_name_deleted'), 'model_service_provider', type_='unique')
    
    # Create new constraints and indexes
    op.create_unique_constraint('uq_model_service_provider_name_deleted', 'model_service_provider', ['name', 'gmt_deleted'])
    op.create_index(op.f('ix_model_service_provider_name'), 'model_service_provider', ['name'], unique=False)
    
    # Drop the old provider_name column
    op.drop_column('model_service_provider', 'provider_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('model_service_provider', sa.Column('provider_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_model_service_provider_name'), table_name='model_service_provider')
    op.drop_constraint('uq_model_service_provider_name_deleted', 'model_service_provider', type_='unique')
    op.create_unique_constraint(op.f('uq_model_service_provider_name_deleted'), 'model_service_provider', ['provider_name', 'gmt_deleted'])
    op.create_index(op.f('ix_model_service_provider_provider_name'), 'model_service_provider', ['provider_name'], unique=False)
    op.drop_column('model_service_provider', 'name')
    op.drop_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', type_='unique')
    # ### end Alembic commands ###
