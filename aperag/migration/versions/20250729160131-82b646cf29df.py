"""empty message

Revision ID: 82b646cf29df
Revises: 5dbc8ad7150a
Create Date: 2025-07-29 16:01:31.688354

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '82b646cf29df'
down_revision: Union[str, None] = '5dbc8ad7150a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_graph_index_merge_suggestions_active_batch'), table_name='graph_index_merge_suggestions_active')
    op.drop_index(op.f('idx_graph_index_merge_suggestions_active_collection'), table_name='graph_index_merge_suggestions_active')
    op.drop_index(op.f('idx_graph_index_merge_suggestions_active_created'), table_name='graph_index_merge_suggestions_active')
    op.drop_index(op.f('ix_graph_index_merge_suggestions_active_collection_id'), table_name='graph_index_merge_suggestions_active')
    op.drop_index(op.f('ix_graph_index_merge_suggestions_active_status'), table_name='graph_index_merge_suggestions_active')
    op.drop_index(op.f('ix_graph_index_merge_suggestions_active_suggestion_batch_id'), table_name='graph_index_merge_suggestions_active')
    op.drop_table('graph_index_merge_suggestions_active')
    op.drop_index(op.f('idx_graph_index_merge_suggestion_batch'), table_name='graph_index_merge_suggestions')
    op.drop_index(op.f('idx_graph_index_merge_suggestion_collection_status'), table_name='graph_index_merge_suggestions')
    op.drop_index(op.f('idx_graph_index_merge_suggestion_created'), table_name='graph_index_merge_suggestions')
    op.drop_index(op.f('ix_graph_index_merge_suggestions_gmt_deleted'), table_name='graph_index_merge_suggestions')
    op.drop_constraint(op.f('uq_graph_index_merge_suggestion'), 'graph_index_merge_suggestions', type_='unique')
    op.create_index('idx_graph_index_merge_suggestions_batch', 'graph_index_merge_suggestions', ['collection_id', 'suggestion_batch_id'], unique=False)
    op.create_index('idx_graph_index_merge_suggestions_collection', 'graph_index_merge_suggestions', ['collection_id'], unique=False)
    op.create_index('idx_graph_index_merge_suggestions_confidence', 'graph_index_merge_suggestions', ['confidence_score'], unique=False)
    op.create_index('idx_graph_index_merge_suggestions_created', 'graph_index_merge_suggestions', ['gmt_created'], unique=False)
    op.create_unique_constraint('uq_graph_index_merge_suggestions', 'graph_index_merge_suggestions', ['collection_id', 'entity_ids_hash'])
    op.drop_column('graph_index_merge_suggestions', 'gmt_deleted')
    op.drop_column('graph_index_merge_suggestions', 'operated_at')
    op.create_index('idx_graph_index_merge_suggestions_history_batch', 'graph_index_merge_suggestions_history', ['suggestion_batch_id'], unique=False)
    op.drop_column('graph_index_merge_suggestions_history', 'gmt_updated')
    op.drop_column('graph_index_merge_suggestions_history', 'graph_version')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('graph_index_merge_suggestions_history', sa.Column('graph_version', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.add_column('graph_index_merge_suggestions_history', sa.Column('gmt_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_index('idx_graph_index_merge_suggestions_history_batch', table_name='graph_index_merge_suggestions_history')
    op.add_column('graph_index_merge_suggestions', sa.Column('operated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('graph_index_merge_suggestions', sa.Column('gmt_deleted', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint('uq_graph_index_merge_suggestions', 'graph_index_merge_suggestions', type_='unique')
    op.drop_index('idx_graph_index_merge_suggestions_created', table_name='graph_index_merge_suggestions')
    op.drop_index('idx_graph_index_merge_suggestions_confidence', table_name='graph_index_merge_suggestions')
    op.drop_index('idx_graph_index_merge_suggestions_collection', table_name='graph_index_merge_suggestions')
    op.drop_index('idx_graph_index_merge_suggestions_batch', table_name='graph_index_merge_suggestions')
    op.create_unique_constraint(op.f('uq_graph_index_merge_suggestion'), 'graph_index_merge_suggestions', ['collection_id', 'entity_ids_hash', 'gmt_deleted'])
    op.create_index(op.f('ix_graph_index_merge_suggestions_gmt_deleted'), 'graph_index_merge_suggestions', ['gmt_deleted'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestion_created'), 'graph_index_merge_suggestions', ['gmt_created'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestion_collection_status'), 'graph_index_merge_suggestions', ['collection_id', 'status'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestion_batch'), 'graph_index_merge_suggestions', ['collection_id', 'suggestion_batch_id'], unique=False)
    op.create_table('graph_index_merge_suggestions_active',
    sa.Column('id', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('collection_id', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('suggestion_batch_id', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('entity_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('entity_ids_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('confidence_score', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=False),
    sa.Column('merge_reason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('suggested_target_entity', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('gmt_created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('gmt_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('graph_version', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('graph_index_merge_suggestions_active_pkey')),
    sa.UniqueConstraint('collection_id', 'entity_ids_hash', name=op.f('uq_graph_index_merge_suggestions_active'))
    )
    op.create_index(op.f('ix_graph_index_merge_suggestions_active_suggestion_batch_id'), 'graph_index_merge_suggestions_active', ['suggestion_batch_id'], unique=False)
    op.create_index(op.f('ix_graph_index_merge_suggestions_active_status'), 'graph_index_merge_suggestions_active', ['status'], unique=False)
    op.create_index(op.f('ix_graph_index_merge_suggestions_active_collection_id'), 'graph_index_merge_suggestions_active', ['collection_id'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestions_active_created'), 'graph_index_merge_suggestions_active', ['gmt_created'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestions_active_collection'), 'graph_index_merge_suggestions_active', ['collection_id'], unique=False)
    op.create_index(op.f('idx_graph_index_merge_suggestions_active_batch'), 'graph_index_merge_suggestions_active', ['collection_id', 'suggestion_batch_id'], unique=False)
    # ### end Alembic commands ###
