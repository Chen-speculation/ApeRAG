embeddingRequest:
  type: object
  description: Request to generate embeddings for text inputs
  properties:
    provider:
      type: string
      description: LLM provider name (e.g., openai, anthropic)
      example: openai
    model:
      type: string
      description: Model name for embedding generation
      example: text-embedding-3-small
    input:
      oneOf:
        - type: string
          description: Single text input to embed
          example: "The food was delicious and the waiter was very attentive."
        - type: array
          description: List of text inputs to embed
          items:
            type: string
          example:
            - "The food was delicious and the waiter was very attentive."
            - "I had a wonderful experience at this restaurant."
  required:
    - provider
    - model
    - input

embeddingData:
  type: object
  description: Individual embedding result
  properties:
    object:
      type: string
      description: Object type identifier
      example: embedding
      default: embedding
    embedding:
      type: array
      description: The embedding vector as a list of floats
      items:
        type: number
        format: float
      example: [0.0023064255, -0.009327292, 0.015797421, 0.0012345678]
    index:
      type: integer
      description: Index of the input text corresponding to this embedding
      example: 0
  required:
    - object
    - embedding
    - index

embeddingUsage:
  type: object
  description: Token usage information for the embedding request
  properties:
    prompt_tokens:
      type: integer
      description: Number of tokens in the input text(s)
      example: 16
    total_tokens:
      type: integer
      description: Total number of tokens used (same as prompt_tokens for embeddings)
      example: 16
  required:
    - prompt_tokens
    - total_tokens

embeddingResponse:
  type: object
  description: Response containing generated embeddings in OpenAI-compatible format
  properties:
    object:
      type: string
      description: Object type identifier
      example: list
      default: list
    data:
      type: array
      description: List of embedding results
      items:
        $ref: '#/embeddingData'
    model:
      type: string
      description: Model used for embedding generation
      example: text-embedding-3-small
    usage:
      $ref: '#/embeddingUsage'
  required:
    - object
    - data
    - model
    - usage

embeddingError:
  type: object
  description: Error response for embedding requests
  properties:
    error:
      type: object
      properties:
        message:
          type: string
          description: Error message describing what went wrong
          example: "Provider 'invalid_provider' not found"
        type:
          type: string
          description: Error type classification
          example: "provider_not_found"
        param:
          type: string
          nullable: true
          description: Parameter that caused the error
          example: "provider"
        code:
          type: string
          nullable: true
          description: Error code for programmatic handling
          example: "PROVIDER_NOT_FOUND"
      required:
        - message
        - type
  required:
    - error

rerankRequest:
  type: object
  description: Request to rerank documents based on query relevance
  properties:
    provider:
      type: string
      description: LLM provider name (e.g., cohere, jina_ai)
      example: cohere
    model:
      type: string
      description: Model name for reranking
      example: rerank-english-v3.0
    query:
      type: string
      description: Search query to rank documents against
      example: "What is the capital of France?"
    documents:
      oneOf:
        - type: array
          description: List of text documents to rerank
          items:
            type: string
          example:
            - "Paris is the capital of France."
            - "London is the capital of England."
            - "Berlin is the capital of Germany."
        - type: array
          description: List of document objects with text and optional metadata
          items:
            type: object
            properties:
              text:
                type: string
                description: Document text content
                example: "Paris is the capital of France."
              metadata:
                type: object
                description: Optional document metadata
                additionalProperties: true
                example:
                  id: "doc_123"
                  source: "wikipedia"
            required:
              - text
          example:
            - text: "Paris is the capital of France."
              metadata:
                id: "doc_1"
                source: "wikipedia"
            - text: "London is the capital of England."
              metadata:
                id: "doc_2"
                source: "encyclopedia"
    top_k:
      type: integer
      description: Maximum number of top-ranked documents to return
      minimum: 1
      maximum: 1000
      default: 10
      example: 3
    return_documents:
      type: boolean
      description: Whether to return document content in response
      default: true
      example: true
  required:
    - provider
    - model
    - query
    - documents

rerankDocument:
  type: object
  description: Individual reranked document result
  properties:
    index:
      type: integer
      description: Original index of the document in the input array
      example: 0
    relevance_score:
      type: number
      format: float
      description: Relevance score between 0 and 1 (higher is more relevant)
      minimum: 0.0
      maximum: 1.0
      example: 0.95
    document:
      type: object
      description: Document content and metadata (only present if return_documents=true)
      properties:
        text:
          type: string
          description: Document text content
          example: "Paris is the capital of France."
        metadata:
          type: object
          description: Document metadata if provided in the request
          additionalProperties: true
          example:
            id: "doc_123"
            source: "wikipedia"
      required:
        - text
  required:
    - index
    - relevance_score

rerankUsage:
  type: object
  description: Token usage information for the rerank request
  properties:
    total_tokens:
      type: integer
      description: Total number of tokens processed (query + all documents)
      example: 156
  required:
    - total_tokens

rerankResponse:
  type: object
  description: Response containing reranked documents in industry-standard format
  properties:
    object:
      type: string
      description: Object type identifier
      example: list
      default: list
    data:
      type: array
      description: List of reranked documents ordered by relevance (highest first)
      items:
        $ref: '#/rerankDocument'
    model:
      type: string
      description: Model used for reranking
      example: rerank-english-v3.0
    usage:
      $ref: '#/rerankUsage'
  required:
    - object
    - data
    - model
    - usage

rerankError:
  type: object
  description: Error response for rerank requests
  properties:
    error:
      type: object
      properties:
        message:
          type: string
          description: Error message describing what went wrong
          example: "Provider 'invalid_provider' not found"
        type:
          type: string
          description: Error type classification
          example: "provider_not_found"
        param:
          type: string
          nullable: true
          description: Parameter that caused the error
          example: "provider"
        code:
          type: string
          nullable: true
          description: Error code for programmatic handling
          example: "PROVIDER_NOT_FOUND"
      required:
        - message
        - type
  required:
    - error 