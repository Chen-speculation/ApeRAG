/* tslint:disable */
/* eslint-disable */
/**
 * ApeRAG API
 * ApeRAG API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { SchemaPropertyAdditionalProperties } from './schema-property-additional-properties';
// May contain unused imports in some cases
// @ts-ignore
import type { SchemaPropertyDefault } from './schema-property-default';
// May contain unused imports in some cases
// @ts-ignore
import type { SchemaPropertyItems } from './schema-property-items';

/**
 * 
 * @export
 * @interface SchemaProperty
 */
export interface SchemaProperty {
    [key: string]: any;

    /**
     * 
     * @type {string}
     * @memberof SchemaProperty
     */
    'type'?: SchemaPropertyTypeEnum | null;
    /**
     * 
     * @type {string}
     * @memberof SchemaProperty
     */
    'description'?: string;
    /**
     * 
     * @type {SchemaPropertyDefault}
     * @memberof SchemaProperty
     */
    'default'?: SchemaPropertyDefault;
    /**
     * 
     * @type {Array<string>}
     * @memberof SchemaProperty
     */
    'enum'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SchemaProperty
     */
    'format'?: string;
    /**
     * 
     * @type {number}
     * @memberof SchemaProperty
     */
    'minimum'?: number;
    /**
     * 
     * @type {number}
     * @memberof SchemaProperty
     */
    'maximum'?: number;
    /**
     * 
     * @type {number}
     * @memberof SchemaProperty
     */
    'minLength'?: number;
    /**
     * 
     * @type {number}
     * @memberof SchemaProperty
     */
    'maxLength'?: number;
    /**
     * 
     * @type {string}
     * @memberof SchemaProperty
     */
    'pattern'?: string;
    /**
     * 
     * @type {SchemaPropertyItems}
     * @memberof SchemaProperty
     */
    'items'?: SchemaPropertyItems;
    /**
     * 
     * @type {{ [key: string]: SchemaProperty; }}
     * @memberof SchemaProperty
     */
    'properties'?: { [key: string]: SchemaProperty; };
    /**
     * 
     * @type {SchemaPropertyAdditionalProperties}
     * @memberof SchemaProperty
     */
    'additionalProperties'?: SchemaPropertyAdditionalProperties;
    /**
     * 
     * @type {Array<string>}
     * @memberof SchemaProperty
     */
    'required'?: Array<string>;
}

export const SchemaPropertyTypeEnum = {
    object: 'object',
    array: 'array',
    string: 'string',
    number: 'number',
    integer: 'integer',
    boolean: 'boolean'
} as const;

export type SchemaPropertyTypeEnum = typeof SchemaPropertyTypeEnum[keyof typeof SchemaPropertyTypeEnum];


